package Test;

public class CaesarCipher {
    public static void main(String[] args){
        String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String lower = "abcdefghijklmnopqrstuvwxyz";

        String s = "z";
        int n = 1;

        String answer = "";

        for(int i=0; i<s.length(); i++){
            String target = String.valueOf(s.charAt(i));

            if(upper.contains(target)){
                if(upper.indexOf(target)+n>25){
                    answer += upper.substring(upper.indexOf(target)+n-26, upper.indexOf(target)+n-26+1);
                }else {
                    answer += upper.substring(upper.indexOf(target) + n, upper.indexOf(target) + n + 1);
                }
            }else if(lower.contains(target)){
                if(lower.indexOf(target)+n >25){
                    answer += lower.substring(lower.indexOf(target)+n-26, lower.indexOf(target)+n-26+1);
                }else{
                    answer += lower.substring(lower.indexOf(target)+n, lower.indexOf(target)+ n +1);
                }
            }else{
                answer += " ";
            }
        }

        System.out.println(answer);


//        다른 풀이
//        return Arrays.stream(s.split("")).map(x -> {
//
//            char c = x.charAt(0);
//
//            if(x.equals(" ")) return " ";
//            else if(c > Z && c + n > z) return Character.toString(c + n - 26);
//            else if(c <= Z && c + n > Z) return Character.toString(c + n - 26);
//            else return Character.toString(c + n);
//
//        }).collect(Collectors.joining(""));

    }
}
