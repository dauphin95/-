package Test;

import java.util.*;

public class DataEngineering {
    public static void main(String[] args){

        int[][] data = {{1, 20300104, 100, 80}
                        , {2, 20300804, 847, 37}
                        , {3, 20300401, 10, 8}};
        String ext = "date";   //"code", "date", "maximum", "remain"
        int val_ext = 20300501;
        String sort_by = "remain";

        int sort = -1;
        switch (sort_by){
            case "code" : Arrays.sort(data, Comparator.comparingInt((int[] o) -> o[0])); break;
            case "date" : Arrays.sort(data, Comparator.comparingInt((int[] o) -> o[1])); break;
            case "maximum" : Arrays.sort(data, Comparator.comparingInt((int[] o) -> o[2])); break;
            case "remain" : Arrays.sort(data, Comparator.comparingInt((int[] o) -> o[3])); break;
        }

        int val = -1;
        switch (ext){
            case "code" : val=0; break;
            case "date" : val=1; break;
            case "maximum" : val=2; break;
            case "remain" : val=3; break;
        }


        List<int[]> tempList = new ArrayList<>();

        for(int i=0; i<data.length; i++){
            if(data[i][val] < val_ext){
                tempList.add(Arrays.stream(data[i]).toArray());
            }
        }
        int[][] temp = new int[tempList.size()][data[0].length];

        for(int i=0; i<tempList.size(); i++){
            temp[i] = tempList.get(i);
        }

        for (int[] a : temp){
            System.out.println();
            for(int b : a){
                System.out.print(b + " ");
            }
        }

// 다른사람 풀이
//        String[] arr = {"code","date","maximum","remain"};
//        List<String> columnList = Arrays.asList(arr);
//        int extIdx = columnList.indexOf(ext);
//        int sortIdx = columnList.indexOf(sort_by);
//        int[][] answer = Arrays.stream(data).filter(o1 -> o1[extIdx] < val_ext)
//                .sorted((o1 ,o2) -> o1[sortIdx]-o2[sortIdx]).toArray(int[][]::new);
//
//        return answer;

    }
}
