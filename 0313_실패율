package Test;

import java.util.*;

public class Failure {
    public static void main(String[] args){
        int N= 5;
        int[] stages = {1, 1, 1, 2, 3, 4};
        int[] answer = new int[N];

        Map<Integer, Double> failureMap = new HashMap<>();
        int total = stages.length;

        Arrays.stream(stages).sorted();

        for(int i=1; i<=N; i++){
            int finalI = i;
            Long count = Arrays.stream(stages).filter(a-> a== finalI).count();

            if(count == 0){
                failureMap.put(i, 0.0);
            }else{
                failureMap.put(i, (Double.valueOf(count.intValue() / total)));
            }

            total -= count;
        }

        List<Integer> keySet = new ArrayList<>(failureMap.keySet());
        keySet.sort((o1, o2) -> failureMap.get(o2).compareTo(failureMap.get(o1)));

        answer = keySet.stream().mapToInt(Integer::intValue).toArray();

        Arrays.stream(answer).forEach(System.out::println);


    }
}
